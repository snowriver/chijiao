/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.client;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Map;
import java.util.TreeMap;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.forbes.hibernate.bean.UcMembers;
import com.forbes.hibernate.bean.UserWeekAbility;
import com.forbes.hibernate.bean.UserWeekAttitude;
import com.forbes.service.plan.WeekAbilityManager;
import com.forbes.service.plan.WeekAttitudeManager;
import com.forbes.struts.form.client.ClientUserWeekAbilityForm;
import com.forbes.struts.form.client.ClientUserWeekAttitudeForm;


/**
 * MyEclipse Struts Creation date: 07-09-2007
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/client/ClientLogin" name="clientLoginForm"
 *                attribute="ClientLoginForm" input="/client/ClientLogin.jsp"
 *                scope="request" validate="true"
 * @struts.action-forward name="success" path="/client/ClientLoginOk.jsp"
 * @struts.action-forward name="fail" path="/client/ClientLoginFail.jsp"
 */
public class ClientManageUserWeekAbilityAction extends DispatchAction {
	
	private WeekAbilityManager weekAbilityManager;
	
	public WeekAbilityManager getWeekAbilityManager() {
		return weekAbilityManager;
	}

	public void setWeekAbilityManager(WeekAbilityManager weekAbilityManager) {
		this.weekAbilityManager = weekAbilityManager;
	}

	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {

		UcMembers user = (UcMembers) request.getSession()
				.getAttribute("CLIENT");
		
		String date = request.getParameter("date");

		if(date == null || date.length() == 0) {
			//SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
			date = new SimpleDateFormat("yyyy-MM-dd").format(new Date());			
		}
		request.setAttribute("DATE", new SimpleDateFormat("yyyy-MM-dd E").format( new SimpleDateFormat("yyyy-MM-dd").parse(date) ));

		Map map = new TreeMap();
		map.put("date", date);


		try {
			UserWeekAbility WeekAbility = weekAbilityManager.getWeekAbility(user.getUid().toString(), date);

			request.setAttribute("PARA", map);
			request.setAttribute("USER_WEEK_ABILITY", WeekAbility);

			return mapping.findForward("list");
		} catch (Exception e) {
			e.printStackTrace();
			return mapping.findForward("fail");
		}
	}

	
	
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {

		ClientUserWeekAbilityForm weekAbilityForm = (ClientUserWeekAbilityForm) form;
		
		UcMembers user = (UcMembers) request.getSession()
				.getAttribute("CLIENT");

		String id = request.getParameter("id");
		String date = request.getParameter("date");
		
				
		SimpleDateFormat dateFormatter = new SimpleDateFormat("yyyy-MM-dd");

		try {
			if(id !=null && id.length() >0) {
				UserWeekAbility ability = weekAbilityManager.getWeekAbility(Integer.parseInt(id));
				ability.setUserId(user.getUid());
				ability.setDate(dateFormatter.parse(date));

				ability.setArdour(weekAbilityForm.getArdour());
				ability.setPromises(weekAbilityForm.getPromises());
				ability.setResponsibility(weekAbilityForm.getResponsibility());
				ability.setAdmire(weekAbilityForm.getAdmire());
				ability.setContribute(weekAbilityForm.getContribute());
				ability.setBelieve(weekAbilityForm.getBelieve());
				ability.setWinwin(weekAbilityForm.getWinwin());
				ability.setListen(weekAbilityForm.getListen());
				ability.setFocus(weekAbilityForm.getFocus());
				ability.setEcho(weekAbilityForm.getEcho());
				ability.setPraise(weekAbilityForm.getPraise());
				ability.setConvince(weekAbilityForm.getConvince());
				ability.setFeedback(weekAbilityForm.getFeedback());
				ability.setThank(weekAbilityForm.getThank());
				ability.setVisualize(weekAbilityForm.getVisualize());
				ability.setStudy(weekAbilityForm.getStudy());
				ability.setInnovation(weekAbilityForm.getInnovation());
				ability.setLove(weekAbilityForm.getLove());
				ability.setGumption(weekAbilityForm.getGumption());
				ability.setPurpose(weekAbilityForm.getPurpose());
				ability.setIntent(weekAbilityForm.getIntent());
				ability.setProfessional(weekAbilityForm.getProfessional());
				ability.setWillpower(weekAbilityForm.getWillpower());
				
				weekAbilityManager.updateWeekAbility(ability);
			}
			else {
				UserWeekAbility ability = new UserWeekAbility();
				ability.setUserId(user.getUid());
				ability.setDate(dateFormatter.parse(date));

				ability.setArdour(weekAbilityForm.getArdour());
				ability.setPromises(weekAbilityForm.getPromises());
				ability.setResponsibility(weekAbilityForm.getResponsibility());
				ability.setAdmire(weekAbilityForm.getAdmire());
				ability.setContribute(weekAbilityForm.getContribute());
				ability.setBelieve(weekAbilityForm.getBelieve());
				ability.setWinwin(weekAbilityForm.getWinwin());
				ability.setListen(weekAbilityForm.getListen());
				ability.setFocus(weekAbilityForm.getFocus());
				ability.setEcho(weekAbilityForm.getEcho());
				ability.setPraise(weekAbilityForm.getPraise());
				ability.setConvince(weekAbilityForm.getConvince());
				ability.setFeedback(weekAbilityForm.getFeedback());
				ability.setThank(weekAbilityForm.getThank());
				ability.setVisualize(weekAbilityForm.getVisualize());
				ability.setStudy(weekAbilityForm.getStudy());
				ability.setInnovation(weekAbilityForm.getInnovation());
				ability.setLove(weekAbilityForm.getLove());
				ability.setGumption(weekAbilityForm.getGumption());
				ability.setPurpose(weekAbilityForm.getPurpose());
				ability.setIntent(weekAbilityForm.getIntent());
				ability.setProfessional(weekAbilityForm.getProfessional());
				ability.setWillpower(weekAbilityForm.getWillpower());
				
				weekAbilityManager.addWeekAbility(ability);
			}
			
			request.setAttribute("OK_MESSAGE", "²Ù×÷³É¹¦");
			request.setAttribute("RETURN_URL", "ClientManageUserWeekAbility.do?act=list&date=" + date);
			
			return mapping.findForward("ok");
		} catch (Exception e) {
			e.printStackTrace();
			return mapping.findForward("fail");
		}
	}

	
}