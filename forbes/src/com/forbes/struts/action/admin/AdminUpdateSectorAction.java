/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.admin;

import java.util.List;
import java.util.Set;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.forbes.hibernate.bean.Sector;
import com.forbes.service.basic.SectorManager;
import com.forbes.util.Pager;
import com.forbes.util.UrlTool;


/** 
 * MyEclipse Struts
 * Creation date: 09-20-2008
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class AdminUpdateSectorAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private SectorManager sectorManager;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String pageNo    = request.getParameter("pno");
		
		int iPageNo = 1;
		try {
			if( pageNo != null ){
				iPageNo = Integer.parseInt( pageNo );
			}
		} catch( Exception e ){ }

		List list = null;
		Pager pager = new Pager();
		pager.setCntOfPage( 10 );
		pager.setCurPage( iPageNo );
		
		try {
		
			list = sectorManager.getTopSectorByPage(pager, iPageNo);
			List all = sectorManager.getTopSector();
			
			request.setAttribute( "PAGER", pager );
			request.setAttribute( "TOP_SECTOR", all );
			request.setAttribute( "SECTOR_LIST", list);
			return mapping.findForward("list");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String pid       = request.getParameter("pid");
		String name      = request.getParameter("name");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
		
			if ( pid.equals("0")) {
				Sector c = new Sector();
				c.setName(name);
				c.setPid(0);
				c.setDisorder(0);
				sectorManager.addSector(c);
				request.setAttribute( "OK_MESSAGE", "添加主行业成功！");
			}
			else {
				Sector c = new Sector();
				c.setName(name);
				c.setPid(Integer.parseInt(pid));
				c.setDisorder(0);
				sectorManager.addSector(c);
				request.setAttribute( "OK_MESSAGE", "添加子行业成功！");
			}
			
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward modify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id        = request.getParameter("id");
		String name      = request.getParameter("name");
		String disorder  = request.getParameter("disorder");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
			
			Sector c = sectorManager.getSector(Integer.parseInt(id));
			
			c.setName(name);
			c.setDisorder(Integer.parseInt(disorder));
			
			sectorManager.updateSector(c);
			request.setAttribute( "OK_MESSAGE", "修改行业成功！");			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id       = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
		
			Sector c = sectorManager.getSector(Integer.parseInt(id));
			System.out.println( "cid=" + c.getId() + "\tcname=" + c.getName() + "\tcpid=" + c.getPid());
			if (c.getPid() == 0) {
				
				Set <Sector>sectors = c.getSectors();
				for( Sector sector : sectors ){
					System.out.println( "cityid=" + sector.getId() + "\tcityname=" + sector.getName() + "\tcitypid=" + sector.getPid());
					sectorManager.deleteSector(sector);
				}
				sectorManager.deleteSector(c);
				request.setAttribute( "OK_MESSAGE", "删除行业成功！");
			}
			else {
				
				sectorManager.deleteSector(c);
				request.setAttribute( "OK_MESSAGE", "删除行业成功！");
			}
			
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}

	public SectorManager getSectorManager() {
		return sectorManager;
	}

	public void setSectorManager(SectorManager sectorManager) {
		this.sectorManager = sectorManager;
	}
	
	



	
	
}