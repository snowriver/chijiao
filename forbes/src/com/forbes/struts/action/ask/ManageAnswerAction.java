/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.ask;

import java.util.Date;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.forbes.exception.ForbesException;
import com.forbes.hibernate.bean.Ask;
import com.forbes.hibernate.bean.AskAnswer;
import com.forbes.hibernate.bean.UcMembers;
import com.forbes.hibernate.bean.User;
import com.forbes.service.ask.AskAnswerManager;
import com.forbes.service.ask.AskManager;
import com.forbes.service.ask.AskSearchManager;



/** 
 * MyEclipse Struts
 * Creation date: 07-09-2007
 * 
 * XDoclet definition:
 * @struts.action path="/client/ClientLogin" name="clientLoginForm" attribute="ClientLoginForm" input="/client/ClientLogin.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/client/ClientLoginOk.jsp"
 * @struts.action-forward name="fail" path="/client/ClientLoginFail.jsp"
 */
public class ManageAnswerAction extends DispatchAction {
	/*#com.she.web.form.client.ClientLoginForm Dependency20*/
/*
	 * Generated Methods
	 */

	private AskSearchManager askSearchManager;
	
	private AskManager askManager;
	
	private AskAnswerManager askAnswerManager;
	
	public ActionForward bestanswer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ForbesException {
		
		//UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub

		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		String id  = request.getParameter("id");
		String bid = request.getParameter("bid");
		Ask ask    = askSearchManager.getAsk(Integer.parseInt(id));
		
		try {
			if(ask.getBestAnswer() != null) {
				/*request.setAttribute("OK_MESSAGE", "设置成功！" );
				request.setAttribute("RETURN_URL", "AskView.do?id=" +id );*/
				
				request.setAttribute("FAIL_MESSAGE", "您已经设置了最佳答案了！" );
				return mapping.findForward("fail");
			} else {
				ask.setBestAnswer(Long.parseLong(bid));
				ask.setStatus(new Short("1"));
				askManager.setBestAnswer(user, ask, null);

				//System.out.println("-------------> 1");
				
				request.setAttribute("OK_MESSAGE", "设置成功！" );
				request.setAttribute("RETURN_URL", "AskSearch.do?act=view&id=" +id );
				
				//System.out.println("-------------> 2");
				return mapping.findForward("ok");
			}
			
				
		} catch (Exception e) {
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "操作失败，请重试！" );
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward repeal(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ForbesException {
		
		//UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub

		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		String id  = request.getParameter("id");
		
		try {
			
			Ask ask    = askSearchManager.getAsk(Integer.parseInt(id));
			
			
			ask.setStatus(new Short("2"));
			askManager.updateAsk(ask);

			//System.out.println("-------------> 1");
			
			request.setAttribute("OK_MESSAGE", "撤消成功！" );
			request.setAttribute("RETURN_URL", "AskSearch.do?act=view&id=" +id );
			
			//System.out.println("-------------> 2");
			return mapping.findForward("ok");
				
		} catch (Exception e) {
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "操作失败，请重试！" );
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward modifyAsk(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ForbesException {
		
		//UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub

		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		String id  = request.getParameter("id");
		
		try {
			String extra = request.getParameter("extra");
			Ask ask      = askSearchManager.getAsk(Integer.parseInt(id));
			
			
			ask.setExtra(extra);
			askManager.updateAsk(ask);

			//System.out.println("-------------> 1");
			
			request.setAttribute("OK_MESSAGE", "添加内容成功！" );
			//request.setAttribute("RETURN_URL", "AskView.do?id=" +id );
			
			//System.out.println("-------------> 2");
			return mapping.findForward("succ");
				
		} catch (Exception e) {
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "操作失败，请重试！" );
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward modifyAnswer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ForbesException {
		
		//UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub

		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		String id  = request.getParameter("id");
		
		try {
			String content = request.getParameter("content");
			AskAnswer askAnswer = askAnswerManager.getAskAnswer(Long.parseLong(id));
			
			askAnswer.setContent(content);
			
			askAnswerManager.updateAskAnswer(askAnswer);

			//System.out.println("-------------> 1");
			
			request.setAttribute("OK_MESSAGE", "修正成功！" );
			//request.setAttribute("RETURN_URL", "AskView.do?id=" +id );
			
			//System.out.println("-------------> 2");
			return mapping.findForward("succ");
				
		} catch (Exception e) {
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "操作失败，请重试！" );
			return mapping.findForward("fail");
		}
	}

	public AskSearchManager getAskSearchManager() {
		return askSearchManager;
	}

	public void setAskSearchManager(AskSearchManager askSearchManager) {
		this.askSearchManager = askSearchManager;
	}

	public AskManager getAskManager() {
		return askManager;
	}

	public void setAskManager(AskManager askManager) {
		this.askManager = askManager;
	}


	public AskAnswerManager getAskAnswerManager() {
		return askAnswerManager;
	}


	public void setAskAnswerManager(AskAnswerManager askAnswerManager) {
		this.askAnswerManager = askAnswerManager;
	}

	
	public ActionForward getAsk(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		try {
			String id  = request.getParameter("id");
			Ask ask    = askSearchManager.getAsk(Integer.parseInt(id));
			
			request.setAttribute( "ASK", ask);
			return mapping.findForward("ask");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward getAnswer(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		UcMembers user  = (UcMembers)request.getSession().getAttribute("CLIENT");
		if(user == null) {
			request.setAttribute("FAIL_MESSAGE", "请登录后再操作！" );
			return mapping.findForward("fail");
		}
		try {
			
			String id  = request.getParameter("id");
			AskAnswer askAnswer    = askAnswerManager.getAskAnswer(Long.parseLong(id));
			
			request.setAttribute( "ANSWER", askAnswer);
			return mapping.findForward("answer");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}

	
}