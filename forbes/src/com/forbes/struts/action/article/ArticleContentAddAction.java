/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.article;

import java.io.UnsupportedEncodingException;
import java.util.Date;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.forbes.exception.ForbesException;
import com.forbes.hibernate.bean.Article;
import com.forbes.hibernate.bean.Comment;
import com.forbes.hibernate.bean.CommentType;
import com.forbes.hibernate.bean.UcMembers;
import com.forbes.hibernate.bean.User;
import com.forbes.service.article.ContentManager;
import com.forbes.service.article.ArticleListManager;
import com.forbes.service.user.UserInfoManager;
import com.forbes.service.user.UserLogin;
import com.forbes.struts.form.user.UserLoginForm;
import com.forbes.util.DictionaryManager;
import com.forbes.util.MD5;


/** 
 * MyEclipse Struts
 * Creation date: 07-09-2007
 * 
 * XDoclet definition:
 * @struts.action path="/client/ClientLogin" name="clientLoginForm" attribute="ClientLoginForm" input="/client/ClientLogin.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/client/ClientLoginOk.jsp"
 * @struts.action-forward name="fail" path="/client/ClientLoginFail.jsp"
 */
public class ArticleContentAddAction extends Action {
	/*#com.she.web.form.client.ClientLoginForm Dependency20*/
/*
	 * Generated Methods
	 */

	private ContentManager contentManager;
	
	//private ArticleListManager articleListManager;
	
	
	//private  UserInfoManager userInfoManager;
	
	
	
	
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws ForbesException, Exception {
		
		//UserLoginForm userLoginForm = (UserLoginForm) form;// TODO Auto-generated method stub
		//System.out.println("---------------------ArticleContentAddAction" );
		request.setCharacterEncoding("UTF-8");
		
		String id	 		 = request.getParameter("id");
		String content 		 = request.getParameter("content");
		
		//System.out.println("content:"+content );
		
		UcMembers user = (UcMembers)request.getSession().getAttribute("CLIENT");
		//Article a = articleListManager.getArticle(Integer.parseInt(id));
		
		//System.out.println("user?null:"+(user==null) );
		//System.out.println("a.id:"+a.getId() );
	
		CommentType contentType = contentManager.getContentType(new Short("1"));
		//System.out.println("1---------------------" );
		//System.out.println("1---------------------" );
			//添加评论
		
		int contentCnt = contentManager.getCount(user.getUid(), contentType.getId(), Integer.parseInt(id));
		
		if(contentCnt <=1 ) {
			//System.out.println("-----------1" );
			try {
				//System.out.println("User.id = " + user.getUid());
				Comment ac = new Comment();
				ac.setUser(user);
				ac.setUsername(user.getUsername());
				ac.setContentType(contentType);
				ac.setObjectId(Integer.parseInt(id));
				ac.setContent(content);
				ac.setIp(request.getRemoteAddr());
				ac.setPubdate(new Date());
				
				//System.out.println("-----------2" );
				contentManager.addContent(ac);
				//System.out.println("-----------3" );
				
				//积分处理
				/*Short accountType = DictionaryManager.getInstance().getVal("ACCOUNT_TYPE", "2").getDvalue();
				int amount = 10;
				String remark = "您发布了文章 “ " + a.getTitle() + "”";
				boolean updateRst = scoreManager.addScoreByUser(a.getId().toString(), a.getUser().getUid().toString(), 
						accountType.toString(), (int)amount, remark);
				if( updateRst){
					System.out.println("添加积分成功");
				}*/
				
				request.setAttribute("RESULT_MESSAGE", "SUCCESS" );
				//request.setAttribute("RETURN_URL", "ArticleView.do?id="+id );
				return mapping.findForward("ok");
			} catch (Exception e) {
				e.printStackTrace();
				request.setAttribute("RESULT_MESSAGE", "FAIL" );
				return mapping.findForward("ok");
			}
		
		}
		else {
			request.setAttribute("RESULT_MESSAGE", "ALREADY" );
			return mapping.findForward("ok");
		}
		
	
		
		
	}





/*	public ArticleListManager getArticleListManager() {
		return articleListManager;
	}


	public void setArticleListManager(ArticleListManager articleListManager) {
		this.articleListManager = articleListManager;
	}

*/



	public ContentManager getContentManager() {
		return contentManager;
	}

	public void setContentManager(ContentManager contentManager) {
		this.contentManager = contentManager;
	}
	
}