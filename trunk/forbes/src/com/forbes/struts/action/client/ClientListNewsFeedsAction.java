/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.client;

import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.forbes.hibernate.bean.NfMsgRelationship;
import com.forbes.hibernate.bean.User;
import com.forbes.service.newsfeed.NewsFeedManager;
import com.forbes.util.Pager;

/** 
 * MyEclipse Struts
 * Creation date: 03-04-2008
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/client/ClientListNewsFeeds.jsp"
 */
public class ClientListNewsFeedsAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private NewsFeedManager newsFeedManager;
	private int cntOfPage = 10;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward in(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		User user = (User)request.getSession().getAttribute("CLIENT");
		
		String pageNo    = request.getParameter( "pno" );
		//String userId    = request.getParameter("uid");
		//String userType  = request.getParameter("utype");
		String msgType  = request.getParameter("mtype");
		
		if(msgType ==null || msgType.length() <1)
			msgType = "1_2_3_4_5_6_7_8_9_0";
		String go  = request.getParameter("go");
		
		//System.out.println("----------msgType:" + msgType);
		
		int iPageNo = 1;
		try{
			iPageNo = Integer.parseInt( pageNo );
		}catch( Exception e){
			
		}
		
		Pager pager = new Pager();
		pager.setCntOfPage( this.cntOfPage );
		pager.setCurPage( iPageNo );
		List <NfMsgRelationship> newsFeedList = newsFeedManager.getNewsFeedByPage(user.getId().toString(), msgType, pager);
		request.setAttribute("MSG_LIST", newsFeedList );
		request.setAttribute("PAGER", pager );
		
		if(go != null && go.length() >0 && go.equals("open"))
			return mapping.findForward("oin");
		else
			return mapping.findForward("in");
	}
	
	public ActionForward out(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		
		String pageNo    = request.getParameter( "pno" );
		String userId    = request.getParameter("uid");
		String userType  = request.getParameter("utype");
		String msgType  = request.getParameter("mtype");
		
		String go  = request.getParameter("go");
		
		//System.out.println("----------utype:" + userType);
		
		int iPageNo = 1;
		try{
			iPageNo = Integer.parseInt( pageNo );
		}catch( Exception e){
			
		}
		
		Pager pager = new Pager();
		pager.setCntOfPage( this.cntOfPage );
		pager.setCurPage( iPageNo );
		List <NfMsgRelationship> newsFeedList = newsFeedManager.getNewsFeedByPage(userId, msgType, pager);
		request.setAttribute("MSG_LIST", newsFeedList );
		request.setAttribute("PAGER", pager );
		
		if(go == null || go.length() <1 || go.equals("open"))
			return mapping.findForward("olist");
		else
			return mapping.findForward("list");
	}
	/*public ActionForward search(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		// TODO Auto-generated method stub
		String pageNo    = request.getParameter( "pno" );
		String userId    = request.getParameter("uid");
		String userType  = request.getParameter("utype");
		String msgType  = request.getParameter("mtype");
		String startTime  = request.getParameter("st");
		String endTime  = request.getParameter("et");
		String keyword  = request.getParameter("key");
		
		//System.out.println("----------utype:" + userType);
		
		int iPageNo = 1;
		try{
			iPageNo = Integer.parseInt( pageNo );
		}catch( Exception e){
			
		}
		
		Pager pager = new Pager();
		pager.setCntOfPage( this.cntOfPage );
		pager.setCurPage( iPageNo );
		List <NfMsgRelationship> newsFeedList = newsFeedManager.searchNewsFeedByPage(userId, msgType, startTime, endTime, keyword, pager);
		request.setAttribute("MSG_LIST", newsFeedList );
		request.setAttribute("PAGER", pager );
		return mapping.findForward("search");
	}*/
	public NewsFeedManager getNewsFeedManager() {
		return newsFeedManager;
	}
	public void setNewsFeedManager(NewsFeedManager newsFeedManager) {
		this.newsFeedManager = newsFeedManager;
	}
	public int getCntOfPage() {
		return cntOfPage;
	}
	public void setCntOfPage(int cntOfPage) {
		this.cntOfPage = cntOfPage;
	}
}