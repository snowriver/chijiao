/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.client;

import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.forbes.hibernate.bean.User;
import com.forbes.mail.SendMailToRegister;
import com.forbes.service.user.UserInfoManager;
import com.forbes.service.user.UserLogin;
import com.forbes.util.MD5;

/** 
 * MyEclipse Struts
 * Creation date: 07-09-2007
 * 
 * XDoclet definition:
 * @struts.action path="/client/ClientLogin" name="clientLoginForm" attribute="ClientLoginForm" input="/client/ClientLogin.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/client/ClientLoginOk.jsp"
 * @struts.action-forward name="fail" path="/client/ClientLoginFail.jsp"
 */
public class ClientVerifyEmailAction extends DispatchAction {
	/*#com.she.web.form.client.ClientLoginForm Dependency20*/
/*
	 * Generated Methods
	 */

	
	private  UserInfoManager userInfoManager;
	
	
	/** 
	 * ¿Í»§µÇä›
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward verify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		String m  = request.getParameter("m");
		
		try{
			User user = userInfoManager.getUser( Integer.parseInt(id) );
			if( m.equals(MD5.convert(user.getLoginName())) ){
				
				//System.out.println(user.getId());
				
				user.setActive("Y");
				user.setLastLoginTime(new Date());
				user.setLastLoginIp(request.getRemoteAddr());
				//userInfoManager.updateUser(user);
				if( user != null ){
					request.getSession().setAttribute("CLIENT", user);
					return mapping.findForward("ok");
				}
				else
					return mapping.findForward("fail");
			}
			else{
				return mapping.findForward("fail");
			}
		}catch( Exception e ){
			e.printStackTrace();
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward resend(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		String id = request.getParameter("id");
		
		try{
			User user = userInfoManager.getUser( Integer.parseInt(id) );
			
			if( user.getActive().equals("N") ){
				try {
					new SendMailToRegister().send(user);
					request.setAttribute("CLIENT", user);
					request.setAttribute("RESEND", "Y");
					return mapping.findForward("resend");
				}catch (Exception e) {
					
					return mapping.findForward("fail");
				}
				
			}
			else{
				return mapping.findForward("fail");
			}
		}catch( Exception e ){
			e.printStackTrace();
			return mapping.findForward("fail");
		}
	}


	public UserInfoManager getUserInfoManager() {
		return userInfoManager;
	}


	public void setUserInfoManager(UserInfoManager userInfoManager) {
		this.userInfoManager = userInfoManager;
	}

	
}