/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.ucenter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/*import org.acegisecurity.Authentication;
import org.acegisecurity.GrantedAuthorityImpl;
import org.acegisecurity.context.SecurityContextHolder;
import org.acegisecurity.providers.UsernamePasswordAuthenticationToken;
import org.acegisecurity.userdetails.User;*/
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.forbes.hibernate.bean.UcMembers;
import com.forbes.service.ucenter.AuthCode;
import com.forbes.service.ucenter.UCenterManager;
import com.forbes.service.user.UserInfoManager;
import com.forbes.service.useraction.UserActionTask;
import com.forbes.service.useraction.action.UserLoginAction;
import com.forbes.thread.TaskManager;
import com.forbes.util.Constant;
/*import com.forbes.service.client.ClientLogin;
import com.forbes.service.client.ClientManage;
import com.forbes.service.usract.UsrActionTask;
import com.forbes.service.usract.act.UsrLoginAction;
import com.forbes.thread.TaskManager;
import com.forbes.tld.AuthorizeTag;
import com.forbes.hibernate.*;
import com.forbes.service.uc.AuthCode;*/
/** 
 * MyEclipse Struts
 * Creation date: 07-09-2007
 * 
 * XDoclet definition:
 * @struts.action path="/client/ClientLogin" name="clientLoginForm" attribute="ClientLoginForm" input="/client/ClientLogin.jsp" scope="request" validate="true"
 * @struts.action-forward name="success" path="/client/ClientLoginOk.jsp"
 * @struts.action-forward name="fail" path="/client/ClientLoginFail.jsp"
 */
public class GotoUCenterAction extends Action {
	/*#com.forbes.web.form.client.ClientLoginForm Dependency20*/
	/*
	 * Generated Methods
	 */
	
	private  UserInfoManager userInfoManager;
	/** 
	 * ¿Í»§µÇä›
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		try{
			String act = request.getParameter("act");
			System.out.println("----act:" + act );
			if ( act == null ){
				return mapping.findForward("fail");
			}
			
			
			if( act.trim().equals("register")){
				request.setAttribute("GOTO_URL", Constant.UC_HOME_URL + "/do.php?ac=3c7495bde72b124b806ed64fb89785db");
			}
			else if (act.trim().equals("lostpasswd")) {
				request.setAttribute("GOTO_URL", Constant.UC_HOME_URL + "/do.php?ac=lostpasswd");
			}
			else if (act.trim().equals("pm")) {
				UcMembers client = (UcMembers)request.getSession().getAttribute("CLIENT");
				if(client==null) {
					return mapping.findForward("fail");
				}
				UCenterManager uc = new UCenterManager();
				String syslogScript = uc.synlogin( client.getUid().toString() );
				request.setAttribute("SYN_LGIN", syslogScript );
				request.setAttribute("GOTO_URL", Constant.UC_HOME_URL + "/space.php?do=pm");

			}
			else if (act.trim().equals("space")) {
				UcMembers client = (UcMembers)request.getSession().getAttribute("CLIENT");
				if(client==null) {
					return mapping.findForward("fail");
				}
				UCenterManager uc = new UCenterManager();
				String syslogScript = uc.synlogin( client.getUid().toString() );
				request.setAttribute("SYN_LGIN", syslogScript );
				request.setAttribute("GOTO_URL", Constant.UC_HOME_URL + "/space.php?uid=" + client.getUid());

			}
			else if (act.trim().equals("renameuser")) {

			}
			else if (act.trim().equals("updatepw")) {

			}
			else if (act.trim().equals("synlogin")) {
				/*String uid = getParam(parseStr,"uid");dajao
				UcMembers client = userInfoManager.getUcMember(Integer.parseInt(uid));
				System.out.println("synlogin: user id = " + client.getUid());
				login(client, request);
				request.setAttribute("RS", API_RETURN_SUCCEED);*/
			}else if (act.trim().equals("synlogout")) {
				/*request.getSession().invalidate();
				request.setAttribute("RS", API_RETURN_SUCCEED);*/
			}else if (act.trim().equals("updatepw")) {
				
			}
			
		}catch( Exception e ){
			//e.printStackTrace();
			//request.setAttribute("RS", API_RETURN_FAILED);
			
		}
		return mapping.findForward("ok");
	}
	public UserInfoManager getUserInfoManager() {
		return userInfoManager;
	}
	public void setUserInfoManager(UserInfoManager userInfoManager) {
		this.userInfoManager = userInfoManager;
	}
	


}