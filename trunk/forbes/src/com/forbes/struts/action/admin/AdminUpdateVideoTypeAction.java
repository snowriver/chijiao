/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.admin;

import java.util.List;
import java.util.Set;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.forbes.hibernate.bean.ArticleType;
import com.forbes.hibernate.bean.VideoType;
import com.forbes.service.video.VideoTypeManager;
import com.forbes.util.Pager;
import com.forbes.util.UrlTool;


/** 
 * MyEclipse Struts
 * Creation date: 09-20-2008
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class AdminUpdateVideoTypeAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private VideoTypeManager videoTypeManager;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String pageNo    = request.getParameter("pno");
		
		int iPageNo = 1;
		try {
			if( pageNo != null ){
				iPageNo = Integer.parseInt( pageNo );
			}
		} catch( Exception e ){ }

		List list = null;
		Pager pager = new Pager();
		pager.setCntOfPage( 10 );
		pager.setCurPage( iPageNo );
		
		try {
		
			list = videoTypeManager.getTopVideoTypeByPage(pager, iPageNo);
			//List all = videoTypeManager.getTopVideoType();
			
			request.setAttribute( "PAGER", pager );
			//request.setAttribute( "TOP_VIDEO_TYPE", all );
			request.setAttribute( "VIDEO_TYPE_LIST", list);
			return mapping.findForward("list");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String pid       	= request.getParameter("pid");
		String name      	= request.getParameter("name");
		String disorder  	= request.getParameter("disorder");
		String issend    	= request.getParameter("issend");
		String description  = request.getParameter("description");
		String keywords 	 = request.getParameter("keywords");
		String returnUrl 	= request.getParameter("returnUrl");
		
		try {
		
			if ( pid.equals("0")) {
				VideoType c = new VideoType();
				c.setName(name);
				c.setPid(0);
				c.setDisorder(Integer.parseInt(disorder));
				c.setIssend(issend);
				c.setDescription(description);
				c.setKeywords(keywords);
				videoTypeManager.addVideoType(c);
				request.setAttribute( "OK_MESSAGE", "添加视频类型成功！");
			}
			else {
				VideoType c = new VideoType();
				c.setName(name);
				c.setPid(Integer.parseInt(pid));
				c.setDisorder(Integer.parseInt(disorder));
				c.setIssend(issend);
				c.setDescription(description);
				c.setKeywords(keywords);
				videoTypeManager.addVideoType(c);
				request.setAttribute( "OK_MESSAGE", "添加视频类型成功！");
			}
			
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward modify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id        = request.getParameter("id");
		String name      = request.getParameter("name");
		String disorder  = request.getParameter("disorder");
		String issend    	= request.getParameter("issend");
		String description  = request.getParameter("description");
		String keywords 	 = request.getParameter("keywords");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
			
			VideoType c = videoTypeManager.getVideoType(Integer.parseInt(id));
			
			c.setName(name);
			c.setDisorder(Integer.parseInt(disorder));
			c.setIssend(issend);
			c.setDescription(description);
			c.setKeywords(keywords);
			
			videoTypeManager.updateVideoType(c);
			request.setAttribute( "OK_MESSAGE", "修改视频类型成功！");			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id       = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
		
			VideoType c = videoTypeManager.getVideoType(Integer.parseInt(id));
			System.out.println( "cid=" + c.getId() + "\tcname=" + c.getName() + "\tcpid=" + c.getPid());
			if (c.getPid() == 0) {
				
				Set <VideoType> videoTypes = c.getVideoTypes();
				for( VideoType videoType : videoTypes ){
					System.out.println( "cityid=" + videoType.getId() + "\tcityname=" + videoType.getName() + "\tcitypid=" + videoType.getPid());
					videoTypeManager.deleteVideoType(videoType);
				}
				videoTypeManager.deleteVideoType(c);
				request.setAttribute( "OK_MESSAGE", "删除视频类型成功！");
			}
			else {
				
				videoTypeManager.deleteVideoType(c);
				request.setAttribute( "OK_MESSAGE", "删除视频类型成功！");
			}
			
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward get(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id        = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
			
			VideoType c = videoTypeManager.getVideoType(Integer.parseInt(id));

			request.setAttribute( "VIDEO_TYPE", c);
			request.setAttribute( "RETURN_URL", returnUrl);
			return mapping.findForward("get");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}


	public ActionForward move_get(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String id        = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");

		try {
			VideoType c = videoTypeManager.getVideoType(Integer.parseInt(id));
			List all = videoTypeManager.getVideoType();
			
			request.setAttribute( "VIDEO_TYPE", c);
			request.setAttribute( "VIDEO_TYPE_LIST", all );
			request.setAttribute( "RETURN_URL", returnUrl );
			return mapping.findForward("move_get");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward move(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String id        = request.getParameter("id").trim();
		String pid       = request.getParameter("pid").trim();
		String returnUrl = request.getParameter("returnUrl");
		
		if(id.equals(pid)) {
			request.setAttribute( "OK_MESSAGE", "移对对象和目标位置相同！！");
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]") );
			return mapping.findForward("ok");
		}

		try {
			VideoType c = videoTypeManager.getVideoType(Integer.parseInt(id));
			c.setPid(Integer.parseInt(pid));
			videoTypeManager.updateVideoType(c);
			
			request.setAttribute( "OK_MESSAGE", "移动视频类型成功！");
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]") );
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}

	public VideoTypeManager getVideoTypeManager() {
		return videoTypeManager;
	}

	public void setVideoTypeManager(VideoTypeManager videoTypeManager) {
		this.videoTypeManager = videoTypeManager;
	}
	
}