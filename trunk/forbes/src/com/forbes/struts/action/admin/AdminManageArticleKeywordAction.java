/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.admin;

import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.TreeMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.forbes.hibernate.bean.ArticleKeyword;
import com.forbes.hibernate.bean.ArticleType;
import com.forbes.hibernate.bean.SearchKeyword;
import com.forbes.service.article.ArticleKeywordManager;
import com.forbes.service.article.ArticleTypeManager;
import com.forbes.util.Pager;
import com.forbes.util.UrlTool;


/** 
 * MyEclipse Struts
 * Creation date: 09-20-2008
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class AdminManageArticleKeywordAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	private ArticleKeywordManager articleKeywordManager;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward list(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String pageNo     = request.getParameter("pno");
		String keyword    = request.getParameter("keyword");
		String orderby    = request.getParameter("orderby");
		
		String parameter = "&keyword=" + ( (keyword==null)?"":keyword ) +
						   "&orderby=" + ( (orderby==null)?"":orderby ) ;
		
		Map map = new TreeMap();
		map.put("keyword", keyword);
		map.put("orderby", orderby);
		map.put("parameter", parameter);

		System.out.println(" keyword=" + keyword);
		
		int iPageNo = 1;
		try {
			if( pageNo != null ){
				iPageNo = Integer.parseInt( pageNo );
			}
		} catch( Exception e ){ }

		List list = null;
		Pager pager = new Pager();
		pager.setCntOfPage( 10 );
		pager.setCurPage( iPageNo );
		
		try {
		
			list = articleKeywordManager.getArticleKeywordByPage(pager, iPageNo, keyword, orderby);
			
			request.setAttribute( "PARA", map );
			request.setAttribute( "PAGER", pager );
			request.setAttribute( "ARTICLE_KEYWORD_LIST", list);
			return mapping.findForward("list");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String keyword  	 = request.getParameter("keyword").trim();
		String rpurl     	 = request.getParameter("rpurl");
		String rank   	     = request.getParameter("rank");
		String returnUrl 	 = request.getParameter("returnUrl");
		
		try {
		
			List list = articleKeywordManager.getArticleKeywordByKeyword(keyword);
			if(list.size() >0) {
				request.setAttribute("FAIL_MESSAGE", "该关键词已经存在。");
				return mapping.findForward("fail");
			}
			else {
				ArticleKeyword ak = new ArticleKeyword();
				ak.setKeyword(keyword);			
				ak.setRpurl(rpurl);
				ak.setSta(new Short("0"));
				
				ak.setRank(0);
				if ( rank != null && rank.length() > 0)
					ak.setRank(Integer.parseInt(rank));
				
				articleKeywordManager.addArticleKeyword(ak);
				request.setAttribute( "OK_MESSAGE", "添加搜索关键词成功！");
				
				request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
				return mapping.findForward("ok");
			}
			

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward batchupdate(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String aids []   = request.getParameterValues("aids");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
		
			for( int i=0; i< aids.length; i++) {
				System.out.println(aids[i]);
				String isdel   = request.getParameter("isdel_" + aids[i]);
				String isnouse = request.getParameter("isnouse_" + aids[i]);
				
				if (isdel != null && isdel.equals("1")) {
					ArticleKeyword ak = articleKeywordManager.getArticleKeyword(Integer.parseInt(aids[i]));
					articleKeywordManager.deleteArticleKeyword(ak);
				}
				else {
					if (isnouse != null && isnouse.equals("1")) {
						ArticleKeyword ak = articleKeywordManager.getArticleKeyword(Integer.parseInt(aids[i]));
						ak.setKeyword(request.getParameter("keyword_" + aids[i]));
						ak.setRank(Integer.parseInt( request.getParameter("rank_" + aids[i]) ));
						ak.setRpurl(request.getParameter("rpurl_" + aids[i]));
						ak.setSta(new Short("0"));
						articleKeywordManager.updateArticleKeyword(ak);
					}
					else {
						ArticleKeyword ak = articleKeywordManager.getArticleKeyword(Integer.parseInt(aids[i]));
						ak.setKeyword(request.getParameter("keyword_" + aids[i]));
						ak.setRank(Integer.parseInt( request.getParameter("rank_" + aids[i]) ));
						ak.setRpurl(request.getParameter("rpurl_" + aids[i]));
						ak.setSta(new Short( request.getParameter("staold_" + aids[i]) ));
						articleKeywordManager.updateArticleKeyword(ak);
					}
				}
				
			}

			request.setAttribute( "OK_MESSAGE", "更新关键词成功！");
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	/*
	public ActionForward modify(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id        = request.getParameter("id");
		String name      = request.getParameter("name");
		String disorder  = request.getParameter("disorder");
		String issend    	= request.getParameter("issend");
		String description  = request.getParameter("description");
		String keywords 	 = request.getParameter("keywords");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
			
			ArticleType c = articleTypeManager.getArticleType(Integer.parseInt(id));
			
			c.setName(name);
			c.setDisorder(Integer.parseInt(disorder));
			c.setIssend(issend);
			c.setDescription(description);
			c.setKeywords(keywords);
			
			articleTypeManager.updateArticleType(c);
			request.setAttribute( "OK_MESSAGE", "修改文章类型成功！");			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id       = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
		
			ArticleType c = articleTypeManager.getArticleType(Integer.parseInt(id));
			System.out.println( "cid=" + c.getId() + "\tcname=" + c.getName() + "\tcpid=" + c.getPid());
			if (c.getPid() == 0) {
				
				Set <ArticleType> articleTypes = c.getArticleTypes();
				for( ArticleType articleType : articleTypes ){
					System.out.println( "cityid=" + articleType.getId() + "\tcityname=" + articleType.getName() + "\tcitypid=" + articleType.getPid());
					articleTypeManager.deleteArticleType(articleType);
				}
				articleTypeManager.deleteArticleType(c);
				request.setAttribute( "OK_MESSAGE", "删除文章类型成功！");
			}
			else {
				
				articleTypeManager.deleteArticleType(c);
				request.setAttribute( "OK_MESSAGE", "删除文章类型成功！");
			}
			
			
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]"));
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	public ActionForward get(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		
		String id        = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");
		
		try {
			
			ArticleType c = articleTypeManager.getArticleType(Integer.parseInt(id));

			request.setAttribute( "ARTICLE_TYPE", c);
			request.setAttribute( "RETURN_URL", returnUrl);
			return mapping.findForward("get");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}


	public ActionForward move_get(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String id        = request.getParameter("id");
		String returnUrl = request.getParameter("returnUrl");

		try {
			ArticleType c = articleTypeManager.getArticleType(Integer.parseInt(id));
			List all = articleTypeManager.getArticleType();
			
			request.setAttribute( "ARTICLE_TYPE", c);
			request.setAttribute( "ARTICLE_TYPE_LIST", all );
			request.setAttribute( "RETURN_URL", returnUrl );
			return mapping.findForward("move_get");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	
	
	public ActionForward move(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		String id        = request.getParameter("id").trim();
		String pid       = request.getParameter("pid").trim();
		String returnUrl = request.getParameter("returnUrl");
		
		if(id.equals(pid)) {
			request.setAttribute( "OK_MESSAGE", "移对对象和目标位置相同！！");
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]") );
			return mapping.findForward("ok");
		}

		try {
			ArticleType c = articleTypeManager.getArticleType(Integer.parseInt(id));
			c.setPid(Integer.parseInt(pid));
			articleTypeManager.updateArticleType(c);
			
			request.setAttribute( "OK_MESSAGE", "移动文章类型成功！");
			request.setAttribute( "RETURN_URL", new UrlTool().getUrl2(returnUrl, "[|]") );
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}*/
	
	
	public ActionForward select(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {

		/*String pageNo     = request.getParameter("pno");
		String keyword    = request.getParameter("keyword");
		String orderby    = request.getParameter("orderby");
		
		String parameter = "&keyword=" + ( (keyword==null)?"":keyword ) +
						   "&orderby=" + ( (orderby==null)?"":orderby ) ;
		
		Map map = new TreeMap();
		map.put("keyword", keyword);
		map.put("orderby", orderby);
		map.put("parameter", parameter);

		System.out.println(" keyword=" + keyword);
		
		int iPageNo = 1;
		try {
			if( pageNo != null ){
				iPageNo = Integer.parseInt( pageNo );
			}
		} catch( Exception e ){ }

		List list = null;
		Pager pager = new Pager();
		pager.setCntOfPage( 10 );
		pager.setCurPage( iPageNo );*/
		
		try {
		
			List list = articleKeywordManager.getAllArticleKeyword();
			
			/*request.setAttribute( "PARA", map );
			request.setAttribute( "PAGER", pager );*/
			request.setAttribute( "F", request.getParameter("f"));
			request.setAttribute( "ARTICLE_KEYWORD_LIST", list);
			return mapping.findForward("select");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}
	

	public ArticleKeywordManager getArticleKeywordManager() {
		return articleKeywordManager;
	}

	public void setArticleKeywordManager(ArticleKeywordManager articleKeywordManager) {
		this.articleKeywordManager = articleKeywordManager;
	}
	
}