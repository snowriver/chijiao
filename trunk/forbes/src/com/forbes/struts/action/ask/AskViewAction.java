/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.forbes.struts.action.ask;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.forbes.hibernate.bean.Ask;
import com.forbes.hibernate.bean.AskAnswer;
import com.forbes.service.ask.AskAnswerManager;
import com.forbes.service.ask.AskManager;
import com.forbes.service.ask.AskSearchManager;



/** 
 * MyEclipse Struts
 * Creation date: 09-20-2008
 * 
 * XDoclet definition:
 * @struts.action scope="request" validate="true"
 */
public class AskViewAction extends Action {
	/*
	 * Generated Methods
	 */
	//private VideoTypeManager videoTypeManager;
	
	private AskSearchManager askSearchManager;
	
	private AskManager askManager;
	
	private AskAnswerManager askAnswerManager;
	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	
	public AskSearchManager getAskSearchManager() {
		return askSearchManager;
	}

	public void setAskSearchManager(AskSearchManager askSearchManager) {
		this.askSearchManager = askSearchManager;
	}

	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		String  id = request.getParameter("id");
		
		try {
			
			Ask ask = askSearchManager.getAsk(Integer.parseInt(id));
			ask.setViews(ask.getViews() + 1);
			askManager.updateAsk(ask);
			request.setAttribute( "ASK", ask);
			
			AskAnswer aa = null;
			if(ask.getBestAnswer() != null)
				aa = askAnswerManager.getAskAnswer(ask.getBestAnswer());
			
			request.setAttribute( "BEST_ASK_ANSWER", aa);
			return mapping.findForward("ok");

		}catch( Exception e ){
			e.printStackTrace();
			request.setAttribute("FAIL_MESSAGE", "系统错误，请稍后再试。");
			return mapping.findForward("fail");
		}
	}

	public AskManager getAskManager() {
		return askManager;
	}

	public void setAskManager(AskManager askManager) {
		this.askManager = askManager;
	}

	public AskAnswerManager getAskAnswerManager() {
		return askAnswerManager;
	}

	public void setAskAnswerManager(AskAnswerManager askAnswerManager) {
		this.askAnswerManager = askAnswerManager;
	}
	
	
}